% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/install.R
\name{install_misle}
\alias{install_misle}
\title{Install the TensorFlow backend (modified code from Keras)}
\usage{
install_misle(
  method = c("auto", "virtualenv", "conda"),
  conda = "auto",
  version = "default",
  tensorflow = "default",
  extra_packages = c("tensorflow-hub"),
  ...
)
}
\arguments{
\item{method}{Installation method ("virtualenv" or "conda")}

\item{conda}{Path to conda executable (or "auto" to find conda using the
PATH and other conventional install locations).}

\item{version}{TensorFlow version to install. Up to and including TensorFlow 2.0,
specify "default" to install the CPU version of the latest release;
specify "gpu" to install the GPU version of the latest release.
Starting from TensorFlow 2.1, by default a version is installed that works
on both GPU- and CPU-only systems. Specify "cpu" to install a CPU-only version.

You can also provide a full major.minor.patch specification (e.g. "1.1.0"),
appending "-gpu" if you want the GPU version (e.g. "1.1.0-gpu").

Alternatively, you can provide the full URL to an installer binary (e.g.
for a nightly binary).}

\item{tensorflow}{TensorFlow version to install. Specify "default" to install
the CPU version of the latest release. Specify "gpu" to install the GPU
version of the latest release.}

\item{extra_packages}{Additional PyPI packages to install along with
Keras and TensorFlow.}

\item{...}{Other arguments passed to [tensorflow::install_tensorflow()].}

\item{conda_python_version}{the python version installed in the created conda
environment. Python 3.6 is installed by default.}
}
\description{
TensorFlow will be installed in to an "r-tensorflow" virtual or conda environment.
Note: "virtualenv" is not avilable on Windows
}
\section{GPU Installation}{


TensorFlow can be configured to run on either CPUs or GPUs. The CPU
version is much easier to install and configure so is the best starting place
especially when you are first learning how to use misle.

- *TensorFlow with CPU support only*. If your system does not have a NVIDIA® GPU,
you must install this version. Note that this version of TensorFlow is typically
much easier to install, so even if you have an NVIDIA GPU, we recommend installing
this version first.

- *TensorFlow with GPU support*. TensorFlow programs typically run significantly
faster on a GPU than on a CPU. Therefore, if your system has a NVIDIA® GPU meeting
all prerequisites and you need to run performance-critical applications, you should
ultimately install this version.

To install the GPU version:

1) Ensure that you have met all installation prerequisites including installation
   of the CUDA and cuDNN libraries as described in [TensorFlow GPU Prerequistes](https://tensorflow.rstudio.com/installation_gpu.html#prerequisites).

2) Pass `tensorflow = "gpu"` to `install_misle()`. For example:

    ```
      install_misle(tensorflow = "gpu")
    ````
}

\section{Windows Installation}{


The only supported installation method on Windows is "conda". This means that you
should install Anaconda 3.x for Windows prior to installing Keras.
}

\section{Additional Packages}{


If you wish to add additional PyPI packages to your Keras / TensorFlow environment you
can either specify the packages in the `extra_packages` argument of `install_misle()`,
or alternatively install them into an existing environment using the
[reticulate::py_install()] function.
}

\examples{
\dontrun{

# default installation
library(misle)
install_misle()

# install using a conda environment (default is virtualenv)
install_misle(method = "conda")

# install with GPU version of TensorFlow
# (NOTE: only do this if you have an NVIDIA GPU + CUDA!)
install_misle(tensorflow = "gpu")

# install a specific version of TensorFlow
install_misle(tensorflow = "1.2.1")
install_misle(tensorflow = "1.2.1-gpu")

}

}
